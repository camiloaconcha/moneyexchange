{"ast":null,"code":"import _classCallCheck from \"/Users/conccami/Documents/camilo/projects/moneyexchange/moneyexchange-react/money-exchange/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/conccami/Documents/camilo/projects/moneyexchange/moneyexchange-react/money-exchange/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/conccami/Documents/camilo/projects/moneyexchange/moneyexchange-react/money-exchange/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/conccami/Documents/camilo/projects/moneyexchange/moneyexchange-react/money-exchange/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/conccami/Documents/camilo/projects/moneyexchange/moneyexchange-react/money-exchange/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/conccami/Documents/camilo/projects/moneyexchange/moneyexchange-react/money-exchange/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/conccami/Documents/camilo/projects/moneyexchange/moneyexchange-react/money-exchange/src/app/components/CurrencyExchanger.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { API, API_KEY, EXCHANGE } from '../constants/endpoints';\nimport { EUR, USD, EURO, DOLLAR } from '../constants/currencies';\nimport NumberFormat from 'react-number-format';\n\nvar CurrencyExchanger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CurrencyExchanger, _Component);\n\n  function CurrencyExchanger(props) {\n    var _this;\n\n    _classCallCheck(this, CurrencyExchanger);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CurrencyExchanger).call(this, props));\n    _this.state = {\n      fromCurrency: USD,\n      toCurrency: EUR,\n      formattedAmount: '',\n      result: '',\n      amount: ''\n    };\n    _this.exchangeRequest = _this.exchangeRequest.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CurrencyExchanger, [{\n    key: \"exchangeRequest\",\n    value: function exchangeRequest() {\n      var _this2 = this;\n\n      axios.get(\"\".concat(API).concat(EXCHANGE, \"?\").concat(API_KEY, \"&from=\").concat(this.state.fromCurrency, \"&to=\").concat(this.state.toCurrency, \"&amount=\").concat(this.state.amount)).then(function (response) {\n        return _this2.setState({\n          result: response.data.result\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"exchanger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(NumberFormat, {\n        value: this.state.formattedAmount,\n        thousandSeparator: true,\n        prefix: DOLLAR,\n        placeholder: USD,\n        onValueChange: function onValueChange(values) {\n          var formattedValue = values.formattedValue,\n              value = values.value;\n\n          _this3.setState({\n            formattedAmount: formattedValue,\n            amount: value\n          });\n        },\n        className: \"exchanger__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(NumberFormat, {\n        value: this.state.result,\n        thousandSeparator: true,\n        prefix: EURO,\n        disabled: true,\n        placeholder: EUR,\n        onValueChange: function onValueChange(values) {\n          var formattedValue = values.formattedValue;\n\n          _this3.setState({\n            result: formattedValue\n          });\n        },\n        className: \"exchanger__input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"exchanger__button\",\n        onClick: this.exchangeRequest,\n        disabled: !this.state.amount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"CALCULATE\"));\n    }\n  }]);\n\n  return CurrencyExchanger;\n}(Component);\n\nexport default CurrencyExchanger;","map":{"version":3,"sources":["/Users/conccami/Documents/camilo/projects/moneyexchange/moneyexchange-react/money-exchange/src/app/components/CurrencyExchanger.js"],"names":["React","Component","axios","API","API_KEY","EXCHANGE","EUR","USD","EURO","DOLLAR","NumberFormat","CurrencyExchanger","props","state","fromCurrency","toCurrency","formattedAmount","result","amount","exchangeRequest","bind","get","then","response","setState","data","values","formattedValue","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,QAAvB,QAAuC,wBAAvC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,MAAzB,QAAuC,yBAAvC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;IAEMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAEP,GADH;AAEXQ,MAAAA,UAAU,EAAET,GAFD;AAGXU,MAAAA,eAAe,EAAE,EAHN;AAIXC,MAAAA,MAAM,EAAE,EAJG;AAKXC,MAAAA,MAAM,EAAE;AALG,KAAb;AAOA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,uDAAvB;AAViB;AAWlB;;;;sCAEiB;AAAA;;AAChBlB,MAAAA,KAAK,CACFmB,GADH,WAEOlB,GAFP,SAEaE,QAFb,cAEyBD,OAFzB,mBAEyC,KAAKS,KAAL,CAAWC,YAFpD,iBAGM,KAAKD,KAAL,CAAWE,UAHjB,qBAIe,KAAKF,KAAL,CAAWK,MAJ1B,GAMGI,IANH,CAMQ,UAAAC,QAAQ;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEP,UAAAA,MAAM,EAAEM,QAAQ,CAACE,IAAT,CAAcR;AAAxB,SAAd,CAAJ;AAAA,OANhB;AAOD;;;6BAEQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,eADpB;AAEE,QAAA,iBAAiB,EAAE,IAFrB;AAGE,QAAA,MAAM,EAAEP,MAHV;AAIE,QAAA,WAAW,EAAEF,GAJf;AAKE,QAAA,aAAa,EAAE,uBAAAmB,MAAM,EAAI;AAAA,cACfC,cADe,GACWD,MADX,CACfC,cADe;AAAA,cACCC,KADD,GACWF,MADX,CACCE,KADD;;AAEvB,UAAA,MAAI,CAACJ,QAAL,CAAc;AAAER,YAAAA,eAAe,EAAEW,cAAnB;AAAmCT,YAAAA,MAAM,EAAEU;AAA3C,WAAd;AACD,SARH;AASE,QAAA,SAAS,EAAC,kBATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAaE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWI,MADpB;AAEE,QAAA,iBAAiB,EAAE,IAFrB;AAGE,QAAA,MAAM,EAAET,IAHV;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,WAAW,EAAEF,GALf;AAME,QAAA,aAAa,EAAE,uBAAAoB,MAAM,EAAI;AAAA,cACfC,cADe,GACID,MADJ,CACfC,cADe;;AAEvB,UAAA,MAAI,CAACH,QAAL,CAAc;AAAEP,YAAAA,MAAM,EAAEU;AAAV,WAAd;AACD,SATH;AAUE,QAAA,SAAS,EAAC,kBAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EA0BE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE,KAAKR,eAApD;AAAqE,QAAA,QAAQ,EAAE,CAAC,KAAKN,KAAL,CAAWK,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA1BF,CADF;AA8BD;;;;EAvD6BjB,S;;AA0DhC,eAAeU,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { API, API_KEY, EXCHANGE } from '../constants/endpoints';\nimport { EUR, USD, EURO, DOLLAR } from '../constants/currencies';\nimport NumberFormat from 'react-number-format';\n\nclass CurrencyExchanger extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fromCurrency: USD,\n      toCurrency: EUR,\n      formattedAmount: '',\n      result: '',\n      amount: ''\n    };\n    this.exchangeRequest = this.exchangeRequest.bind(this);\n  }\n\n  exchangeRequest() {\n    axios\n      .get(\n        `${API}${EXCHANGE}?${API_KEY}&from=${this.state.fromCurrency}&to=${\n          this.state.toCurrency\n        }&amount=${this.state.amount}`\n      )\n      .then(response => this.setState({ result: response.data.result }));\n  }\n\n  render() {\n    return (\n      <div className='exchanger'>\n        <NumberFormat\n          value={this.state.formattedAmount}\n          thousandSeparator={true}\n          prefix={DOLLAR}\n          placeholder={USD}\n          onValueChange={values => {\n            const { formattedValue, value } = values;\n            this.setState({ formattedAmount: formattedValue, amount: value });\n          }}\n          className=\"exchanger__input\"\n        />\n\n        <NumberFormat\n          value={this.state.result}\n          thousandSeparator={true}\n          prefix={EURO}\n          disabled\n          placeholder={EUR}\n          onValueChange={values => {\n            const { formattedValue } = values;\n            this.setState({ result: formattedValue });\n          }}\n          className=\"exchanger__input\"\n        />\n\n        <button className=\"exchanger__button\" onClick={this.exchangeRequest} disabled={!this.state.amount}>CALCULATE</button>\n      </div>\n    );\n  }\n}\n\nexport default CurrencyExchanger;\n"]},"metadata":{},"sourceType":"module"}